// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// resample_multinomial_cpp
IntegerVector resample_multinomial_cpp(int n, NumericVector weights);
RcppExport SEXP _bayesSSM_resample_multinomial_cpp(SEXP nSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(resample_multinomial_cpp(n, weights));
    return rcpp_result_gen;
END_RCPP
}
// resample_stratified_cpp
Rcpp::IntegerVector resample_stratified_cpp(int n, Rcpp::NumericVector weights);
RcppExport SEXP _bayesSSM_resample_stratified_cpp(SEXP nSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(resample_stratified_cpp(n, weights));
    return rcpp_result_gen;
END_RCPP
}
// resample_systematic_cpp
Rcpp::IntegerVector resample_systematic_cpp(int n, Rcpp::NumericVector weights);
RcppExport SEXP _bayesSSM_resample_systematic_cpp(SEXP nSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(resample_systematic_cpp(n, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayesSSM_resample_multinomial_cpp", (DL_FUNC) &_bayesSSM_resample_multinomial_cpp, 2},
    {"_bayesSSM_resample_stratified_cpp", (DL_FUNC) &_bayesSSM_resample_stratified_cpp, 2},
    {"_bayesSSM_resample_systematic_cpp", (DL_FUNC) &_bayesSSM_resample_systematic_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayesSSM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
